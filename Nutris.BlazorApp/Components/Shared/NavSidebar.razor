@* NavSidebar.razor - Ubicación: /Components/Shared/NavSidebar.razor *@
@namespace NutrisBlazor.Components.Shared
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject ILocalizationService Localization
@inject ILocalStorageService LocalStorage
@implements IDisposable

<div class="sidebar">
    <div class="content-sidebar">
        <div>
            <a href="/home">
                <div class="logo">
                    <img alt="nutris logo" class="w-75" src="/logonutris.svg" />
                </div>
            </a>

            <div class="nav-container">
                <nav class="font-20">
                    <NavLink href="/home" Match="NavLinkMatch.All">
                        <div class="navgrid">
                            <img src="/menu/feamehome.svg" alt="home">
                            <span>@Localization["NavBar.Home"]</span>
                        </div>
                    </NavLink>
                    <NavLink href="/yourproducts">
                        <div class="navgrid">
                            <img src="/menu/yourproducts.svg" alt="yourproducts">
                            <span>@Localization["NavBar.YourProducts"]</span>
                        </div>
                    </NavLink>
                    <NavLink href="/customize">
                        <div class="navgrid">
                            <img src="/menu/customize.svg" alt="customize">
                            <span>@Localization["NavBar.Customize"]</span>
                        </div>
                    </NavLink>
                </nav>
            </div>
            <hr class="lineb">
        </div>

        <div class="perfil-container">
            <div class="avatar-container">
                @if (!string.IsNullOrEmpty(customerLogo))
                {
                    <img src="@($"data:image/png;base64,{customerLogo}")" alt="" class="avatar">
                }
                <div class="text-titles">
                    <h2>@userName</h2>
                </div>
            </div>

            <div class="icons-acount">
                <img @onclick="ShowLogoutModal" src="/menu/exit.svg" alt="exit">
                <img src="/menu/interrogacion.png" alt="help" style="width: 25px;"
                     @onmouseover="() => isTooltipVisible = true"
                     @onmouseleave="() => isTooltipVisible = false">
                <img src="/menu/perfil.svg" alt="perfil">

                @if (isTooltipVisible)
                {
                    <div class="tooltip-custom">
                        <p>@Localization["NavBar.Needhelp"]</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Logout Modal -->
@if (showLogoutModal)
{
    <div class="modal-backdrop fade show"></div>
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Localization["NavBar.Confirm"]</h5>
                    <button type="button" class="btn-close" @onclick="() => showLogoutModal = false"></button>
                </div>
                <div class="modal-body">
                    <p class="text-center">@Localization["NavBar.logout"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="() => showLogoutModal = false">
                        @Localization["NavBar.Cancel"]
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="Logout">
                        @Localization["NavBar.SignOut"]
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .sidebar {
        width: 300px;
        height: 100vh;
        background-color: #DAE7F5;
        flex-shrink: 0;
        position: relative;
        margin: 0;
        padding: 0;
    }

    .content-sidebar {
        width: 95%;
        height: 100%;
        margin: auto;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .logo {
        padding: 1rem;
        margin: 25px 0;
    }

        .logo img {
            display: block;
            margin: auto;
        }

    .w-75 {
        width: 75%;
    }

    .navgrid {
        display: grid;
        grid-template-columns: 20px auto;
        gap: 0.69rem;
        align-items: center;
    }

    .nav-container nav a {
        display: block;
        margin: 20px 0;
        padding: 0 1rem;
        text-decoration: none;
        font-size: 1.125rem;
        font-weight: 300;
        color: #2F5496;
    }

        .nav-container nav a.active {
            background-color: #C5D9EC;
            font-weight: 700;
            border-radius: 30px;
            padding: 10px 20px;
        }

    .font-20 {
        font-size: 1.125rem;
    }

    .lineb {
        margin-top: 34px;
        border-top: 1px dashed #2F5496;
    }

    .avatar-container {
        width: 90%;
        margin: 0 auto;
        background: white;
        border-radius: 20px;
        padding: 15px;
        margin-bottom: 10px;
        text-align: center;
    }

    .avatar {
        width: 85px;
        height: 85px;
        object-fit: contain;
        border-radius: 10px;
    }

    .text-titles h2 {
        font-weight: 700;
        font-size: 14px;
        margin: 12px 0 0;
        color: #2c3e50;
    }

    .icons-acount {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        justify-items: center;
        border-top: solid 1px #dee2e6;
        padding: 1.57rem;
        position: relative;
    }

        .icons-acount img {
            cursor: pointer;
            width: 20px;
            height: 20px;
        }

    .tooltip-custom {
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        background: white;
        padding: 8px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        font-size: 12px;
        width: 200px;
        margin-bottom: 10px;
        z-index: 1000;
    }

        .tooltip-custom p {
            margin: 0;
            text-align: center;
        }

    /* Modal */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1040;
        width: 100vw;
        height: 100vh;
        background-color: #000;
        opacity: 0.5;
    }

    .modal {
        z-index: 1050;
    }
</style>

@code {
    private bool showLogoutModal = false;
    private bool isTooltipVisible = false;
    private string userName = "";
    private string customerLogo = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadUserData();
        Localization.OnLanguageChanged += OnLanguageChanged;
    }

    private async Task LoadUserData()
    {
        var user = await AuthService.GetCurrentUserAsync();
        if (user != null)
        {
            userName = user.Name;
        }
        else
        {
            userName = await LocalStorage.GetItemAsync<string>("name") ?? "Guest";
        }

        customerLogo = await LocalStorage.GetItemAsync<string>("logo") ?? "";
    }

    private void OnLanguageChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    private void ShowLogoutModal()
    {
        showLogoutModal = true;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/", true);
    }

    public void Dispose()
    {
        Localization.OnLanguageChanged -= OnLanguageChanged;
    }
}