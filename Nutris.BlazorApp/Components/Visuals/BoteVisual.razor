@namespace YourApp.Components.Visuals

<div class="bote-visual-container">
    @switch (Forma?.ToUpper())
    {
        case "ROUND":
            <svg viewBox="0 0 200 300" class="bote-svg">
                <defs>
                    <linearGradient id="@($"round-gradient-{Id}")" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="0%" style="stop-color:@Color;stop-opacity:0.9" />
                        <stop offset="50%" style="stop-color:@Color;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:@Color;stop-opacity:0.7" />
                    </linearGradient>
                </defs>
                <!-- Bottle neck -->
                <rect x="85" y="20" width="30" height="40" fill="@Color" opacity="0.8" />
                <!-- Bottle body -->
                <ellipse cx="100" cy="180" rx="60" ry="100" fill="url(#@($"round-gradient-{Id}"))" />
                <!-- Highlight -->
                <ellipse cx="85" cy="140" rx="25" ry="40" fill="white" opacity="0.3" />
            </svg>
            break;

        case "SQUARE":
            <svg viewBox="0 0 200 300" class="bote-svg">
                <defs>
                    <linearGradient id="@($"square-gradient-{Id}")" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="0%" style="stop-color:@Color;stop-opacity:0.9" />
                        <stop offset="50%" style="stop-color:@Color;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:@Color;stop-opacity:0.7" />
                    </linearGradient>
                </defs>
                <!-- Bottle neck -->
                <rect x="85" y="20" width="30" height="40" fill="@Color" opacity="0.8" />
                <!-- Bottle body -->
                <rect x="40" y="60" width="120" height="200" rx="10" ry="10"
                      fill="url(#@($"square-gradient-{Id}"))" />
                <!-- Highlight -->
                <rect x="55" y="80" width="40" height="60" fill="white" opacity="0.3" rx="5" />
            </svg>
            break;

        case "CYLINDRICAL":
            <svg viewBox="0 0 200 300" class="bote-svg">
                <defs>
                    <linearGradient id="@($"cyl-gradient-{Id}")" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="0%" style="stop-color:@Color;stop-opacity:0.9" />
                        <stop offset="50%" style="stop-color:@Color;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:@Color;stop-opacity:0.7" />
                    </linearGradient>
                </defs>
                <!-- Bottle neck -->
                <rect x="85" y="20" width="30" height="40" fill="@Color" opacity="0.8" />
                <!-- Bottle body -->
                <rect x="50" y="60" width="100" height="200"
                      fill="url(#@($"cyl-gradient-{Id}"))" />
                <!-- Top ellipse -->
                <ellipse cx="100" cy="60" rx="50" ry="10" fill="@Color" opacity="0.9" />
                <!-- Bottom ellipse -->
                <ellipse cx="100" cy="260" rx="50" ry="10" fill="@Color" opacity="0.7" />
                <!-- Highlight -->
                <rect x="65" y="80" width="30" height="50" fill="white" opacity="0.3" />
            </svg>
            break;

        default:
            <div class="no-visual">
                <i class="fas fa-wine-bottle"></i>
            </div>
            break;
    }
</div>

@code {
    [Parameter] public string Forma { get; set; } = "";
    [Parameter] public string Color { get; set; } = "#CCCCCC";

    private string Id => Guid.NewGuid().ToString("N").Substring(0, 8);
}

<style>
    .bote-visual-container {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .bote-svg {
        width: 100%;
        height: 100%;
        max-width: 200px;
        max-height: 300px;
    }

    .no-visual {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 4rem;
        color: #ccc;
    }
</style>